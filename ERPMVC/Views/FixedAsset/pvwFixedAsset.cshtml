@model ERPMVC.Models.FixedAsset

@{ Layout = null;
	var messages = new Dictionary<string, string>() { { "custom", "Ingrese un valor correcto." },
// {"required","Valor requerido" }
};
	var rules = new Dictionary<string, string>() { { "custom", "customFunction" } };
}

<script>
	function customFunction(input) {

		if (input.attr('name') === "FixedAssetId" && input.val() === "0") {
			return false;
		}
    }

    function GetBranchId() {
        return { 'BranchId': $("#BranchId").val() }
    }

    function RefreshWarehouse() {
        $("#WarehouseId").data("kendoDropDownList").dataSource.read();
    }

    function onChangeVidaUtil() {
        $("#Amount").val("");
        $("#Cost").val("");
    }

    function onChangeMonto() {
        $("#Cost").val("");
    }

    function Calculos() {
        const formatter = new Intl.NumberFormat('en-US', {
            style: 'decimal',
            minimumFractionDigits: 2
        });
        const _porcentaje = 0.01;
        var _valorResidual = 0;
        var _valorADepreciar = 0;
        var _depreciacionAnual = 0;
        var _totalDepreciacionMensual = 0;
        var _monto = $("#Amount").val();
        var _vidaUtil = $("#FixedActiveLife").val();

        // Valor residual = Monto del activo * porcentaje
        _valorResidual = (_monto * _porcentaje);
        $("#ResidualValue").val(formatter.format(round(_valorResidual, 2)));

        // Depreciacion
        _valorADepreciar = (_monto - _valorResidual);
        $("#ToDepreciate").val(formatter.format(round(_valorADepreciar, 2)));

        // Total Depreciacion Anual
        _totalDepreciacionMensual = (_valorADepreciar / _vidaUtil);

        // Depreciacion Anual
        _depreciacionAnual = (_totalDepreciacionMensual / 12);
        $("#TotalDepreciated").val(formatter.format(round(_depreciacionAnual, 2)));
    }
    function round(value, decimals) {
        return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);
    }
    //function GetFixedAssetId() {
    //    return { 'FixedAssetId': $("#FixedAssetId").val() }
    //}

</script>


<div class="mt-3 m-l-5">
    <div class="row">
        <form id="frmFixedAsset" class="validation-wizard wizard-circle"
              kendo-validator="true"
              data-ajax="true"
              data-ajax-method="post"
              data-ajax-begin="SaveFixedAsset">
            @*<script>
            $.validator.setDefaults({
                ignore: [],
            });
        </script>*@
            <div class="modal-body">
                <div class="form-body">
                    <div class="row" hidden>
                        <div class="col-md-4">
                            <label asp-for="FixedAssetId" class="control-label" style="min-width:100%"></label>
                            <input type="text" asp-for="FixedAssetId" name="FixedAssetId" class="form-control"
                                   disabled="disabled" style="width:100%;" />
                            <span asp-validation-for="FixedAssetId" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label asp-for="FixedAssetName" class="control-label" style="min-width:100%">Nombre</label>
                                <input asp-for="FixedAssetName" name="FixedAssetName" type="text" class="form-control"
                                       required data-required-msg="Nombre es requerido" maxlength="50" autocomplete="off" style="width:100%;"  />
                                <span asp-validation-for="FixedAssetName" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label asp-for="FixedAssetDescription" class="control-label" style="min-width:100%;">Descripción</label>
                                <input asp-for="FixedAssetDescription" type="text" name="FixedAssetDescription" maxlength="200" class="form-control" autocomplete="off" style="width:100%;" validationMessage="Descripción es requerida" required />
                                <span asp-validation-for="FixedAssetDescription" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label asp-for="FixedAssetCode" class="control-label" style="min-width:100%;">Código</label>
                                <input asp-for="FixedAssetCode" type="text" name="FixedAssetCode" class="form-control" maxlength="20" autocomplete="off" style="width:100%;" validationMessage="Código es requerido" required />
                                <span asp-validation-for="FixedAssetCode" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label asp-for="AssetDate" class="control-label" style="min-width:100%;">Fecha de Adquisición</label>
                                <kendo-datetimepicker name="AssetDate"
                                                      format="dd/MM/yyyy"
                                                      style="width:100%;"
                                                      data-val-required="La fecha es requerida"
                                                      value="Model.AssetDate" />

                            </div>
                            <span asp-validation-for="AssetDate" class="text-danger"></span>
                        </div>

                        <div class="col-sm-4">
                            <div class="form-group">
                                <label asp-for="FixedAssetGroupId" class="control-label" style="width:100%;">Grupo de Activo</label>
                                <kendo-dropdownlist name="FixedAssetGroupId"
                                                    for="@Model.FixedAssetGroupId"
                                                    filter="Kendo.Mvc.UI.FilterType.Contains"
                                                    option-label="Seleccionar Grupo"
                                                    datatextfield="FixedAssetGroupName"
                                                    datavaluefield="FixedAssetGroupId"
                                                    data-val-required="Grupo es requerido"
                                                    style="width:100%;">
                                    <datasource type="DataSourceTagHelperType.WebApi" server-operation="true">
                                        <transport>
                                            <read url="@Url.Action("Get", "FixedAssetGroup")" />
                                        </transport>
                                    </datasource>
                                </kendo-dropdownlist>
                                <span asp-validation-for="FixedAssetGroupId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label asp-for="BranchId" class="control-label" style="width:100%;">Sucursal</label>
                                <kendo-dropdownlist name="BranchId"
                                                    for="@Model.BranchId"
                                                    filter="Kendo.Mvc.UI.FilterType.Contains"
                                                    option-label="Seleccionar Sucursal"
                                                    datatextfield="BranchName"
                                                    disabled
                                                    onchange="RefreshWarehouse();"
                                                    datavaluefield="BranchId"
                                                    data-val-required="Sucursal es requerida"
                                                    style="width:100%;">
                                    <datasource type="DataSourceTagHelperType.WebApi" server-operation="true">
                                        <transport>
                                            <read url="@Url.Action("GetBranch", "Branch")" />
                                        </transport>
                                    </datasource>
                                </kendo-dropdownlist>
                                <span asp-validation-for="BranchId" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="row" hidden>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label asp-for="WarehouseId" class="control-label" style="width:100%;">Bodega</label>
                                <kendo-dropdownlist name="WarehouseId"
                                                    for="@Model.WarehouseId"
                                                    filter="Kendo.Mvc.UI.FilterType.Contains"
                                                    option-label="Seleccionar Bodega"
                                                    datatextfield="WarehouseName"
                                                    datavaluefield="WarehouseId"
                                                    data-val-required="Bodega es requerida"
                                                    style="width:100%;">
                                    <datasource type="DataSourceTagHelperType.WebApi" server-operation="true">
                                        <transport>
                                            <read url="@Url.Action("Get", "Warehouse")" data="GetBranchId" />
                                        </transport>
                                    </datasource>
                                </kendo-dropdownlist>
                                <span asp-validation-for="WarehouseId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label asp-for="CenterCostId" class="control-label" style="width:100%;">Centro Costo</label>
                                <kendo-dropdownlist name="CenterCostId"
                                                    for="@Model.CenterCostId"
                                                    filter="Kendo.Mvc.UI.FilterType.Contains"
                                                    option-label="Seleccionar Centro"
                                                    datatextfield="CostCenterName"
                                                    datavaluefield="CostCenterId"
                                                    data-val-required="Centro es requerido"
                                                    style="width:100%;">
                                    <datasource type="DataSourceTagHelperType.WebApi" server-operation="true">
                                        <transport>
                                            <read url="@Url.Action("Get", "CostCenter")" />
                                        </transport>
                                    </datasource>
                                </kendo-dropdownlist>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="IdEstado" class="control-label"></label>
                                <kendo-dropdownlist name="IdEstado"
                                                    for="@Model.IdEstado"
                                                    filter="Kendo.Mvc.UI.FilterType.Contains"
                                                    option-label="Seleccionar Estado"
                                                    datatextfield="NombreEstado"
                                                    datavaluefield="IdEstado"
                                                    data-val-required="Estado es requerido"
                                                    style="width: 100%;">
                                    <datasource type="DataSourceTagHelperType.WebApi" server-operation="true">
                                        <transport>
                                            <read url="@Url.Action("GetGrupoEstadoUno", "Estados")" />
                                        </transport>
                                    </datasource>
                                </kendo-dropdownlist>
                                <span asp-validation-for="IdEstado" class="text-danger"></span>
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <label asp-for="Amount" class="control-label" style="min-width:100%">Monto</label>
                            <kendo-numerictextbox name="Amount"
                                                  onchange="onChangeMonto()"
                                                  for="Amount" style="width:100%" data-val-required="Monto es requerido" />
                            <span asp-validation-for="Amount" class="text-danger"></span>
                        </div>
                        <div class="col-md-4">
                            <label asp-for="Cost" class="control-label" style="min-width:100%">Costo</label>
                            <kendo-numerictextbox name="Cost"
                                                  for="Cost" style="width:100%"
                                                  data-val-required="Costo es requerido"
                                                  onchange="Calculos()" />
                            <span asp-validation-for="Cost" class="text-danger"></span>
                        </div>
                        <div class="col-md-4">
                            <label asp-for="FixedActiveLife" class="control-label" style="min-width:100%;">Vida Útil</label>
                            <kendo-numerictextbox name="FixedActiveLife"
                                                  for="FixedActiveLife" format="###"
                                                  onchange="onChangeVidaUtil()"
                                                  style="width:100%" maxlength="3"
                                                  data-val-required="Vida útil es requerida" />
                            <span asp-validation-for="FixedActiveLife" class="text-danger"></span>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <label asp-for="ToDepreciate" class="control-label" style="min-width:100%">Total a Depreciar</label>
                            <input asp-for="ToDepreciate" class="form-control" name="ToDepreciate" disabled style="width:100%" />
                        </div>
                        <div class="col-md-4">
                            <label asp-for="TotalDepreciated" class="control-label" style="min-width:100%">Depreciación Mensual</label>
                            <input asp-for="TotalDepreciated" class="form-control" name="TotalDepreciated" disabled style="width:100%" />
                        </div>
                        <div class="col-md-4">
                            <label asp-for="ResidualValue" class="control-label" style="min-width:100%">Valor Residual</label>
                            <input asp-for="ResidualValue" class="form-control" name="ResidualValue" id="ResidualValue" disabled style="width:100%" />
                        </div>
                    </div>
                    <div class="row">


                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="btnFixedAsset" class="btn btn-success" type="button" onclick="SaveFixedAsset(this);"> Guardar </button>
                <a asp-action="FixedAsset" class="btn btn-secondary">Cerrar</a>
            </div>
        </form>
    </div>
    @*<div id="divDepreciationAssetFixed">
        @await Html.PartialAsync("Depreciation.cshtml")
    </div>*@
</div>
					


<script>
	$(document).ready(function () {
		$("#warning").hide();
	})



    function SaveFixedAsset() {
		//var notification = $("#notification").data("kendoNotification");
		var group = $("#FixedAssetGroupId").data("kendoDropDownList");
		//var branch = $("#BranchId").data("kendoDropDownList");
		//var warehouse = $("#WarehouseId").data("kendoDropDownList");
		var costCenter = $("#CenterCostId").data("kendoDropDownList");
		//var estado = $("#IdEstado").data("kendoDropDownList");
		//var fechaConvert = $("#AssetDate").getKendoDateTimePicker().value().toJSON()

		if ($('#FixedActiveLife').val() < 0 || $('#Amount').val() < 0 || $('#Cost').val() < 0) {
			alert("No se permiten valores negativos");
			return;
		}
        debugger
        var dataObject =
        {
            'FixedAssetId': $('#FixedAssetId').val() === "" ? "0" : $("#FixedAssetId").val(),
            'FixedAssetName': $('#FixedAssetName').val(),
            'FixedAssetDescription': $('#FixedAssetDescription').val(),
            'FixedAssetCode': $('#FixedAssetCode').val(),
            'AssetDate': $("#AssetDate").getKendoDateTimePicker().value().toJSON(),
            'FixedAssetGroupId': group.value(),
            'FixedAssetCode': $('#FixedAssetCode').val(),
            'BranchId': $("#BranchId").val(),
            'BranchName': $("#BranchId").text(),
            'WarehouseId': '0',
            'WarehouseName': '',
			'CenterCostId': costCenter.value(),
			'CenterCostName': costCenter.text(),
			'FixedActiveLife': $('#FixedActiveLife').val(),
			'Amount': $('#Amount').val(),
			'Cost': $('#Cost').val(),
			'ResidualValue': $('#ResidualValue').val(),
			'ToDepreciate': $('#ToDepreciate').val(),
			'TotalDepreciated': $('#TotalDepreciated').val(),
            'IdEstado': '1',
			'Estado': '',
		};

		//var validator = $("#frmFixedAsset").data("kendoValidator");
		//var status = $(".status");

		//if (validator.validate()) {
			$.ajax({
				url: '@Url.Action("SaveFixedAsset", "FixedAsset")',
				method: "POST",
				dataType: 'json',
				contentType: 'application/json',
				async: false,
				data: JSON.stringify(dataObject),
				success: function (data) {
					$("#btnFixedAsset").hide();
					$("#warning").show();
					SaveHistorial(data)
                    swal("Activos Fijos", "Guardados Satisfactoriamente", "success");
					RefrescarGrid();
					$("#FixedAssetGroupId").data("kendoDropDownList").value(-1);
					$("#BranchId").data("kendoDropDownList").value(-1);
					$("#WarehouseId").data("kendoDropDownList").value(-1);
					$("#CenterCostId").data("kendoDropDownList").value(-1);
					$("#IdEstado").data("kendoDropDownList").value(-1);
					$('#ModalFixedAsset').modal('hide');
				}, 
				error: function (XMLHttpRequest, textStatus, errorThrown) {
                    swal("Error", "Error", "error");
				}
			});
		//} else {
  //          swal("Error", "Error", "error");
		//}
	}



	
	function SaveHistorial(_data) {
		var _fechaInicial;
		var _fechaInicialConvert;
		var _fechaActual = new Date();
		var _id = 0;
		var _vidaUtil = 0;
		var _anioInicio = 0;
		var _mesInicio = 0;
		var _diaInicio = 0;
		var _anioActual = 0;
		var anioVencimiento = 0;
		var _sumaAnios = 0;
		var monthNames = ['January', 'February', 'March', 'April', 'May', 'June',
			'July', 'August', 'September', 'October', 'November', 'December'];
		var dif = 0;   
		var _sumaTotal = 0; 
		var _valorAcumulado = 0;
		var _totalDepreciated = 0;
		var dataObject;

		if (_data.FixedAssetId !== 0) {
			_id = _data.FixedAssetId;
		} else {
			_id = $('#FixedAssetId').val();
		}

		//_fechaInicial = $("#AssetDate").getKendoDateTimePicker().value().toJSON()
		//_vidaUtil = parseInt($('#FixedActiveLife').val(), 10);
		//_totalDepreciated = parseFloat($('#TotalDepreciated').val());

		if (_data.FixedAssetId !== 0) {
			_fechaInicial = _data.AssetDate;
			_vidaUtil = _data.FixedActiveLife;
			_totalDepreciated = _data.TotalDepreciated;
		} else {
			_fechaInicial = $("#AssetDate").getKendoDateTimePicker().value().toJSON()        
			_vidaUtil = parseInt($('#FixedActiveLife').val(), 10);
			_totalDepreciated = parseFloat($('#TotalDepreciated').val());
		}

		_fechaInicialConvert = new Date(_fechaInicial);
		_anioInicio = _fechaInicialConvert.getFullYear();
		_mesInicio = _fechaInicialConvert.getMonth();
		_diaInicio = _fechaInicialConvert.getDate();
		_anioActual = _fechaActual.getFullYear();
		anioVencimiento = _fechaInicialConvert.getFullYear() + _vidaUtil;
		_sumaAnios = (_anioInicio + _vidaUtil);

		if (_id !== "0") {
			DeleteDepreciateFixedAsset(_id);
		}

		if ((_anioActual < _sumaAnios) && (_mesInicio == 0)) {
			dif = (_anioActual - _anioInicio);
			for (var i = 0; i <= dif; i++) {
				_sumaTotal = (_totalDepreciated * 12);
				dataObject =
					{
						'FixedAssetId': _id,
						'Year': (_anioInicio + i),
						'January': _totalDepreciated,
						'February': _totalDepreciated,
						'March': _totalDepreciated,
						'April': _totalDepreciated,
						'May': _totalDepreciated,
						'June': _totalDepreciated,
						'July': _totalDepreciated,
						'August': _totalDepreciated,
						'September': _totalDepreciated,
						'October': _totalDepreciated,
						'November': _totalDepreciated,
						'December': _totalDepreciated,
						'TotalDepreciated': _sumaTotal,
					};				
				$.ajax({
					url: '@Url.Action("SaveDepreciationFixedAsset", "DepreciationFixedAsset")',
					method: "POST",
					dataType: 'json',
					contentType: 'application/json',
					async: false,
					data: JSON.stringify(dataObject),
					success: function () {
					},
					error: function (XMLHttpRequest, textStatus, errorThrown) {
						notification.show({
							title: "Validación",
							message: textStatus + ": " + XMLHttpRequest.responseText
						}, "error");
					}
				});
			}

		} else {
			_valorAcumulado = _totalDepreciated * (12 - _mesInicio);
			if (_fechaInicialConvert.getDate() == 1) {
			/**Paso 1 --> Llenar los meses del primer año del registro */				
				dataObject = {
					'FixedAssetId': _id,
					'Year': _anioInicio,
					'TotalDepreciated': _valorAcumulado,
				};
				for (var i = _mesInicio; i <= 11; i++) {
					_valorAcumulado = (_valorAcumulado + _totalDepreciated);
					Object.defineProperty(dataObject, monthNames[i], {
						value: _totalDepreciated,
						writable: true,
						enumerable: true,
						configurable: true
					});
				}
				$.ajax({
					url: '@Url.Action("SaveDepreciationFixedAsset", "DepreciationFixedAsset")',
					method: "POST",
					dataType: 'json',
					contentType: 'application/json',
					async: false,
					data: JSON.stringify(dataObject),
					success: function () {
					},
					error: function (XMLHttpRequest, textStatus, errorThrown) {
						notification.show({
							title: "Validación",
							message: textStatus + ": " + XMLHttpRequest.responseText
						}, "error");
					}
				});
				/**Paso 2 --> Llenar todos los años de vida útil comenzando un año despues */
				dif = (_anioActual - _anioInicio);
				for (var i = 1; i <= dif; i++) {
					_sumaTotal = (_totalDepreciated * 12);
					dataObject = {
						'FixedAssetId': _id,
						'Year': (_anioInicio + i),
						'January': _totalDepreciated,
						'February': _totalDepreciated,
						'March': _totalDepreciated,
						'April': _totalDepreciated,
						'May': _totalDepreciated,
						'June': _totalDepreciated,
						'July': _totalDepreciated,
						'August': _totalDepreciated,
						'September': _totalDepreciated,
						'October': _totalDepreciated,
						'November': _totalDepreciated,
						'December': _totalDepreciated,
						'TotalDepreciated': _sumaTotal,
					};
					$.ajax({
						url: '@Url.Action("SaveDepreciationFixedAsset", "DepreciationFixedAsset")',
						method: "POST",
						dataType: 'json',
						contentType: 'application/json',
						async: false,
						data: JSON.stringify(dataObject),
						success: function () {
						},
						error: function (XMLHttpRequest, textStatus, errorThrown) {
							notification.show({
								title: "Validación",
								message: textStatus + ": " + XMLHttpRequest.responseText
							}, "error");
						}
					});
				}
			/**Paso 3 --> Llenar los meses del año que termina */
				if (_anioActual == _sumaAnios) {
					_sumaTotal = (_totalDepreciated * _mesInicio);
					dataObject = {
						'FixedAssetId': _id,
						'Year': anioVencimiento,
						'TotalDepreciated': _sumaTotal,
					}
					for (var i = 0; i <= (_mesInicio - 1); i++) {
						Object.defineProperty(dataObject, monthNames[i], {
							value: _totalDepreciated,
							writable: true,
							enumerable: true,
							configurable: true
						});
					}
					$.ajax({
						url: '@Url.Action("SaveDepreciationFixedAsset", "DepreciationFixedAsset")',
						method: "POST",
						dataType: 'json',
						contentType: 'application/json',
						async: false,
						data: JSON.stringify(dataObject),
						success: function () {
						},
						error: function (XMLHttpRequest, textStatus, errorThrown) {
							notification.show({
								title: "Validación",
								message: textStatus + ": " + XMLHttpRequest.responseText
							}, "error");
						}
					});
				}				
			} else {
			/**Paso 1 --> Llenar los meses del primer año del registro */
				_valorAcumulado = _totalDepreciated * (11 - _mesInicio);
				dataObject = {
					'FixedAssetId': _id,
					'Year': _anioInicio,
					'TotalDepreciated': _valorAcumulado,
				}
				for (var i = _mesInicio + 1; i <= 11; i++) {
					_valorAcumulado = (_valorAcumulado + _totalDepreciated);
					Object.defineProperty(dataObject, monthNames[i], {
						value: _totalDepreciated,
						writable: true,
						enumerable: true,
						configurable: true
					});
				}
				$.ajax({
					url: '@Url.Action("SaveDepreciationFixedAsset", "DepreciationFixedAsset")',
					method: "POST",
					dataType: 'json',
					contentType: 'application/json',
					async: false,
					data: JSON.stringify(dataObject),
					success: function () {

					},
					error: function (XMLHttpRequest, textStatus, errorThrown) {
						notification.show({
							title: "Validación",
							message: textStatus + ": " + XMLHttpRequest.responseText
						}, "error");
					}
				});
				/**Paso 2 --> llenar todos los años de vida util comezando un año despues */
				dif = (_anioActual - _anioInicio);
				for (var i = 1; i <= dif; i++) {
					_sumaTotal = (_totalDepreciated * 12);
					dataObject = {
						'FixedAssetId': _id,
						'Year': (_anioInicio + i),
						'January': _totalDepreciated,
						'February': _totalDepreciated,
						'March': _totalDepreciated,
						'April': _totalDepreciated,
						'May': _totalDepreciated,
						'June': _totalDepreciated,
						'July': _totalDepreciated,
						'August': _totalDepreciated,
						'September': _totalDepreciated,
						'October': _totalDepreciated,
						'November': _totalDepreciated,
						'December': _totalDepreciated,
						'TotalDepreciated': _sumaTotal,
					};
					$.ajax({
						url: '@Url.Action("SaveDepreciationFixedAsset", "DepreciationFixedAsset")',
						method: "POST",
						dataType: 'json',
						contentType: 'application/json',
						async: false,
						data: JSON.stringify(dataObject),
						success: function () {
						},
						error: function (XMLHttpRequest, textStatus, errorThrown) {
							notification.show({
								title: "Validación",
								message: textStatus + ": " + XMLHttpRequest.responseText
							}, "error");
						}
					});
				}
			/**Paso 3 --> Llenar los meses del año que termina */
				if (_anioActual == _sumaAnios)
				{
					_sumaTotal = (_totalDepreciated * _mesInicio);
					dataObject = {
						'FixedAssetId': _id,
						'Year': _anioInicio,
						'TotalDepreciated': _sumaTotal,
					};
					for (var i = 0; i <= _mesInicio; i++) {
						Object.defineProperty(dataObject, monthNames[i], {
							value: _totalDepreciated,
							writable: true,
							enumerable: true,
							configurable: true
						});
					}
					$.ajax({
						url: '@Url.Action("SaveDepreciationFixedAsset", "DepreciationFixedAsset")',
						method: "POST",
						dataType: 'json',
						contentType: 'application/json',
						async: false,
						data: JSON.stringify(dataObject),
						success: function () {
						},
						error: function (XMLHttpRequest, textStatus, errorThrown) {
							notification.show({
								title: "Validación",
								message: textStatus + ": " + XMLHttpRequest.responseText
							}, "error");
						}
					});
				}				
			}
		}
	}

	function DeleteDepreciateFixedAsset(_id) {
		var dataObject =
		{
			'FixedAssetId': _id
		};
		$.ajax({
			url: '@Url.Action("DeleteAll", "DepreciationFixedAsset")',
			method: "POST",
			dataType: 'json',
			contentType: 'application/json',
			async: false,
			data: JSON.stringify(dataObject),
			success: function () {					
			}, 
			error: function (XMLHttpRequest, textStatus, errorThrown) {
				notification.show({
					title: "Validación",
					message: textStatus + ": " + XMLHttpRequest.responseText
				}, "error");
			}
		});
	}

	
</script>
