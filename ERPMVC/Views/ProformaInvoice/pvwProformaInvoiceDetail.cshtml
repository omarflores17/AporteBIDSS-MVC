@model ERPMVC.Models.ProformaInvoiceLine

@{
    var messages1 = new Dictionary<string, string>() { { "custom", "Ingrese un valor correcto." },
{"required","Valor requerido" }
};
    var rules1 = new Dictionary<string, string>() { { "custom", "customFunction" } };
}



<script>
    function clearsession() {
         var dataObject = ["listadoproductosproformainvoice"];
         $.ajax({
            url: '@Url.Action("ClearSession","Common")',
            method: 'POST',
            datatype: "json",
            contentType: 'application/json',
            async: false,
            data: JSON.stringify(dataObject),
            success: function (result) {
                  //  $('#myModalSalesOrder').modal('show');
            },
             error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert(textStatus + ": " + XMLHttpRequest.responseText);
              }
         });
    }
   
 //para cargar campos dependientes de Producto
    function SetProductName(e) {

        if ($("#ProductId").val() > 0) {
         //   debugger;

            var numerictextbox = $("#Quantity").data("kendoNumericTextBox");
            numerictextbox.focus();

            $("#ProductName").val($("#ProductId").data("kendoDropDownList").text());
            var dataObject = { ProductId: $("#ProductId").val()};
                $.ajax({
                url: '@Url.Action("GetProductById", "Product")',
                method: 'GET',
                datatype: "json",
                contentType: 'application/json',
                async: false,
                data: dataObject,
                success: function (result) {
                    $("#DescriptionDetail").val(result.Description);
                    $("#Price").val(result.DefaultSellingPrice);
                   // $("#DiscountPercentage").val(result.PorcentajeDescuento);
                    $("#descuentoproducto").val(result.PorcentajeDescuento);
                   // debugger;
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert(textStatus + ": " + XMLHttpRequest.responseText);
                }
                });

        }
        else
        {
           $("#SalesOrderName").prop('disabled', false);
        }

       // debugger
        document.getElementById("Quantity").select();


        

                if ($("#ProductId").val() == 0) {
                    $("#Existencia").val(0);
        }
        else {
            $.ajax({
            type: "POST",
            url: "@Url.Action("VerSaldo", "KardexViale")",
            data: $("#ProductId").val(),
            contentType: "application/json; charset=utf-8",
         dataType: "json",
            success: function (data) {
                console.log(data);
                    $("#Existencia").val(data);
                },
            error: function (req, status, error) {
                alert(error);
            }
        });
            }
    }
</script>
<div class="card card-outline-inverse">

    <div class="row">
        <div class="col-12">
            <div class="card">
                    <form id="frmSalesOrderLine"
                          kendo-validator="true" 
                          data-ajax="true"
                          class="validation-wizard wizard-circle">
                        <div id="campos" class="modal-body">
                            <div class="row">
                                <div class="col-md-3" hidden>
                                    <div class="form-group">
                                        <label asp-for="ProformaLineId" class="control-label" style="width:100%">Linea No.</label>
                                        <input type="number" asp-for="ProformaLineId" class="form-control" style="min-width:100%" readonly />
                                    </div>
                                </div>
                                <div class="col-md-3" hidden>
                                    <div class="form-group">
                                        <label asp-for="ProformaInvoiceId" class="control-label" style="width:100%"></label>
                                        <input type="number" asp-for="ProformaInvoiceId" class="form-control" disabled />
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label asp-for="ProductId" class="control-label" style="width:100%">Producto</label>
                                        <input type="hidden" id="ProductName" hidden />
                                        <kendo-dropdownlist name="ProductId" filter="Kendo.Mvc.UI.FilterType.Contains"
                                                            option-label="Seleccione el Producto"
                                                            for="ProductId"
                                                            datatextfield="ProductName"
                                                            datavaluefield="ProductId"
                                                            auto-bind="false"
                                                            data-validate="false"
                                                            onchange="SetProductName();"
                                                            style="width: 100%;">
                                            <datasource type="DataSourceTagHelperType.WebApi">
                                                <transport>
                                                    <read url="@Url.Action("GetProductConcatenado", "Product")" />
                                                </transport>
                                            </datasource>
                                        </kendo-dropdownlist>
                                        <span asp-validation-for="ProductId" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label asp-for="Price" class="control-label" style="width:100%"></label>
                                        <input type="text" id="Price" readonly required asp-for="Price" onchange="soloNumeros();" class="k-textbox" style="min-width:100%" />
                                        <span asp-validation-for="Price" class="text-danger"></span>
                                    </div>
                                </div>

                                <div class="col-md-2" id="Existencia1">
                                    <div class="form-group">
                                        <label class=" control-label" style="width:100%">Existencia</label>
                                        <input type="text" id="Existencia"  class="k-textbox" maxlength="15" style="width:100%" readonly />
                                    </div>
                                </div>

                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label asp-for="Quantity" class="control-label" style="width:100%"></label>
                                        <kendo-numerictextbox name="Quantity"
                                                              id="Quantity"
                                                              format="#"
                                                              decimals="0"
                                                              min="0"
                                                              required data-required-msg="La cantidad es requerida."
                                                              onchange="CalcularTotalDescuento();"
                                                              style="width:100%"
                                                              value="Model.Quantity" />
                                        <span asp-validation-for="Quantity" class="text-danger"></span>
                                    </div>
                                </div>

                                <div class="col-md-3" hidden>
                                    <div class="form-group">
                                        <label class="control-label" style="width:100%">Descuento Producto</label>
                                        <input type="text" id="descuentoproducto"  class="k-textbox" style="min-width:100%" />
                                    </div>
                                </div>

                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label asp-for="DiscountPercentage" class="control-label" style="width:100%">% Descuento</label>
                                        <kendo-numerictextbox name="DiscountPercentage"
                                                              id="DiscountPercentage"
                                                              format="#"
                                                              decimals="0"
                                                              min="0"
                                                              required data-required-msg="El porcentaje es requerido."
                                                              onchange="CalcularTotalDescuento();"
                                                              style="width:100%"
                                                              value="0" />
                                        <span asp-validation-for="DiscountPercentage" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label asp-for="Description" class="control-label" style="width:100%"></label>
                                        <input type="text" id="DescriptionDetail" readonly required asp-for="Description"  class="k-textbox" style="min-width:100%" />
                                        <span asp-validation-for="Description" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-4" hidden>
                                    <div class="form-group">
                                        <label asp-for="TaxCode" class="control-label" style="width:100%"></label>
                                        <kendo-dropdownlist name="TaxCode" filter="Kendo.Mvc.UI.FilterType.Contains"
                                                            option-label="Seleccione el Impuestos"
                                                            datatextfield="TaxCode"
                                                            id="TaxCode"
                                                            datavaluefield="TaxId"
                                                            data-validate="false"
                                                            required
                                                            for="TaxCode"
                                                            onchange="GetPercentage();"
                                                            style="width: 100%;"
                                                            value="1">
                                            <datasource type="DataSourceTagHelperType.WebApi">
                                                <transport>
                                                    <read url="@Url.Action("GetTaxes", "Tax")" />
                                                </transport>
                                            </datasource>
                                        </kendo-dropdownlist>
                                        <span asp-validation-for="TaxCode" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-3" hidden>
                                    <div class="form-group">
                                        <label asp-for="UnitOfMeasureId" class="control-label" style="width:100%"></label>
                                        <kendo-dropdownlist name="UnitOfMeasureId" filter="Kendo.Mvc.UI.FilterType.Contains"
                                                            id="UnitOfMeasureId"
                                                            option-label="Seleccione la unidad de medida"
                                                            for="UnitOfMeasureId"
                                                            datatextfield="UnitOfMeasureName"
                                                            datavaluefield="UnitOfMeasureId"
                                                            auto-bind="true"
                                                            value="7"
                                                            style="width: 100%;">
                                            <datasource type="DataSourceTagHelperType.WebApi">
                                                <transport>
                                                    <read url="@Url.Action("GetUnitOfMeasureJson", "UnitOfMeasure")" />
                                                </transport>
                                            </datasource>

                                        </kendo-dropdownlist>
                                        @*<span asp-validation-for="UnitOfMeasureId" class="text-danger"></span>*@
                                    </div>
                                </div>
                            </div>

                            <div class="row" hidden>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label asp-for="Amount" class="control-label" style="width:100%"></label>
                                        <kendo-numerictextbox name="Amount"
                                                              format="n2"
                                                              id="AmountLine"
                                                              spinners="false"
                                                              min="0"
                                                              required
                                                              disabled
                                                              step="1"
                                                              style="width:100%"
                                                              value="Model.Amount" />

                                        <span asp-validation-for="Amount" class="text-danger"></span>
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label asp-for="DiscountAmount" class="control-label" style="width:100%"></label>
                                        <kendo-numerictextbox name="DiscountAmount"
                                                              format="n2"
                                                              min="0"
                                                              max="999999999"
                                                              step="1"
                                                              readonly
                                                              style="width:100%"
                                                              value="Model.DiscountAmount" />
                                        <span asp-validation-for="DiscountAmount" class="text-danger"></span>
                                    </div>
                                </div>

                            </div>
                            <div class="row" hidden>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label asp-for="SubTotal" class="control-label" style="width:100%"></label>
                                        <kendo-numerictextbox name="SubTotal"
                                                              id="SubTotalLine"
                                                              format="n2"
                                                              min="0"
                                                              step="1"
                                                              required
                                                              disabled
                                                              style="width:100%"
                                                              value="Model.SubTotal" />
                                        <span asp-validation-for="SubTotal" class="text-danger"></span>
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label asp-for="TaxPercentage" class="control-label" style="width:100%"></label>
                                        <kendo-numerictextbox name="TaxPercentage"
                                                              format="#.## '%'"
                                                              min="0"
                                                              decimals="2"
                                                              required
                                                              disabled
                                                              max="100"
                                                              maxlength="3"
                                                              step="0.01"
                                                             
                                                              style="width:100%"
                                                              value="Model.TaxPercentage" />
                                        <span asp-validation-for="TaxPercentage" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label asp-for="TaxAmount" class="control-label" style="width:100%"></label>
                                        <kendo-numerictextbox name="TaxAmount"
                                                              format="n2"
                                                              min="0"
                                                              step="1"
                                                              disabled
                                                              style="width:100%"
                                                              value="Model.TaxAmount" />
                                        <span asp-validation-for="TaxAmount" class="text-danger" style="width:100%"></span>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label asp-for="Total" class="control-label" style="width:100%"></label>
                                        <kendo-numerictextbox name="Total"
                                                              format="n2"
                                                              min="0"
                                                              disabled
                                                              required
                                                              id="TotalLine"
                                                              step="1"
                                                              style="width:100%"
                                                              value="Model.Total" />
                                        <span asp-validation-for="Total" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div>
                                <button id="btnActualizarCotizacionLinea" type="submit" class="btn btn-success float-right" onclick="AddConceptoCotizacion();">Añadir producto</button>
                            </div>

                            <br />
                            <div class="col-md-12">
                            </div>
                        </div>

                    </form>
            </div>
        </div>
    </div>
</div>



<script>
    $(document).ready(function () {
        clearsession()


        if (@Model.ProformaInvoiceId> 0) {

            var dropdownlist = $("#ProductId").data("kendoDropDownList");
            dropdownlist.enable(false);  
            $("#btnActualizarCotizacionLinea").prop('disabled', true);
            $("#btnSaveCotizacion").prop('disabled', true);
             var dropdownlist1 = $("#DiscountPercentage").data("kendoNumericTextBox");
            dropdownlist1.enable(false);      
            var dropdownlist2 = $("#Quantity").data("kendoNumericTextBox");
            dropdownlist2.enable(false);  
            
            
        }
    });
    //cargar solo unidad
    $(document).ready(function () {
        // create DropDownList from input HTML element
        var data = [
            { text: "Unidades", value: "7" },
        ];

        $("#UnitOfMeasureName").kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            dataSource: data,
            index: 0,
            //change: onChange
        });
    })
         if ("@Model.UnitOfMeasureName" == 7) {
       // debugger
             var data = [
                 { text: "Unidades", value: "7" },
             ];

                $("#BranchType").kendoDropDownList({
                 dataTextField: "text",
                 dataValueField: "value",
                 dataSource: data,
                 index: 0,
                 //change: onChange
                });
         }



    function closesaleorderline() {
       // CalcularTotalDescuento();
        CalcularTotalDocumento();
        $("#myModalSalesOrderLine").modal('hide');

    }

    function CalcularTotalDocumento() {
        debugger;
        var freight = $("#Freight").val()===""?0:$("#Freight").val();

        var displayedData = $("#gridProformaInvoiceDetail").data().kendoGrid.dataSource.view();
        var total = 0, totaldescuento = 0, totalimpuesto = 0,totalimpuesto18=0, totalmonto = 0;
        var TotalExento = 0, TotalExonerado = 0, TotalGravado = 0,TotalGravado18=0;

        $(displayedData).each(function (index, element) {
            var t = JSON.parse(JSON.stringify(element));

            total = total + t["Total"];
            totaldescuento = totaldescuento  + t["DiscountAmount"];
            totalmonto = totalmonto + t["Amount"];
            totalimpuesto = totalimpuesto + t["TaxAmount"];

            if (t["TaxCode"] == "1" ) {
                TotalGravado = TotalGravado + (t["Total"] - t["TaxAmount"]);
                
            }

            if (t["TaxCode"] == "3") {
                TotalGravado18 = TotalGravado18 + (t["Total"] - t["TaxAmount"]);
                totalimpuesto18 = totalimpuesto18 + t["TaxAmount"];
            }

            if (t["TaxCode"] == "4") {
                 TotalExento = TotalExento + t["Total"];
            }

            if (t["TaxCode"] == "5") {
                TotalExonerado = TotalExonerado + t["Total"];
            }

        });

        //console.log(TotalGravado); console.log(TotalGravado18); console.log(TotalExento);
        //console.log(TotalExonerado); console.log(totalimpuesto18); console.log(totalimpuesto); console.log(Number(freight));
        var sumatotal =    Number(totalimpuesto) + Number(freight);
        setearvalor('Amount', totalmonto);

        setearvalor('TotalExento', TotalExento);
        setearvalor('TotalExonerado', TotalExonerado);
        setearvalor('TotalGravado', TotalGravado);
        setearvalor('TotalGravado18', TotalGravado18);

        setearvalor('Discount', totaldescuento);
        setearvalor('Tax', (totalmonto - (totaldescuento)) * 0.15);
        setearvalor('Tax18', totalimpuesto18);
        setearvalor('SubTotal', totalmonto - (totaldescuento));
        setearvalor('Total', (totalmonto - totaldescuento) + ((totalmonto - totaldescuento) * 0.15));

    }

    function AddConceptoCotizacion(e) {
        debugger;
        var cant = $("#Quantity").val();
        var exis = $("#Existencia").val();
        if ($("#Quantity").val() == 0) {
            swal("Error", "La Cantidad no puede ser 0.");
        } else if ($("#ProductId").val() == 0) {
            swal("Error", "seleccione todos los campos");
        } else if (parseInt(exis) < parseInt(cant)) {
             swal("Error", "Na hay suficiente existencia.");
        } else if ($("#ProductId").val() > 0) {
                try {
                    //$("#btnActualizarCotizacionLinea").prop("disabled", false);
                   // CalcularTotalDescuento();
                    RefreshCotizacionesDetail();
                    CalcularTotalDocumento();  
                } catch (e) {
                    $("#btnActualizarCotizacionLinea").prop("disabled", false);
                    $("#btnActualizarCotizacionLinea").prop("disabled", false);
                }

                }
       }


    completedorderlinemant = function (xhr) {

        $('#myModalSalesOrderLine').find(':input').not('#SalesOrderId :submit').val('0');
        $('#TaxCode').val('0');
        $('#TaxCode').data("kendoDropDownList").value('0');
        $('#TaxCode').data("kendoDropDownList").value(0);
        $('Description').val('');
        CalcularTotalDocumento();
       // CalcularTotalDescuento();
        $("#btnActualizarCotizacionLinea").prop("disabled", false);
        closesaleorderline();
    };

    function setearvalor(nombrenumerico,valor) {
        var numeric = $("#" + nombrenumerico).data("kendoNumericTextBox");
        numeric.value(valor);
        numeric.trigger('change');
        numeric = null;
    }



    function GetPercentage()
    {
        if ($("#TaxCode").val() != null) {
            var dataObject = { TaxCode: $("#TaxCode").val() };
            $.ajax({
                url: '@Url.Action("GetTaxById","Tax")',
                method: 'GET',
                datatype: "json",
                contentType: 'application/json',
                async: false,
                data: dataObject,
                success: function (result) {
                    setearvalor("TaxPercentage", result.TaxPercentage);
                   // CalcularTotalDescuento();
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert(textStatus + ": " + XMLHttpRequest.responseText);
                }
            });
        }

    }
    function CalcularTotalDescuento() {
        debugger;
        
        var descuento = $("#DiscountPercentage").val();
        var descuentop = $("#descuentoproducto").val();
        var quantity = $("#Quantity").val();
        var price = $("#Price").val();
        var amount = parseInt(quantity) * parseFloat(price);
        var DiscountAmount = amount * (descuento / 100);
        var subtotal = amount - DiscountAmount;
        var taxamount = subtotal * (15 / 100);
        var Total = subtotal + taxamount;
        if (parseFloat(descuento) > parseFloat(descuentop)) {
            $("#btnActualizarCotizacionLinea").prop("disabled", true);
            swal('El descuento excede el valor permitido, ' + descuentop + '% es lo maximo.');
            event.preventDefault();
            return (false);
        }
        else if (parseFloat(descuento) <= parseFloat(descuentop)) {
            $("#btnActualizarCotizacionLinea").prop("disabled", false);
            DiscountAmount = descuento;
            DiscountAmount = parseFloat(amount) * (parseFloat(descuento) / 100);
            subtotal = parseFloat(amount) - (DiscountAmount);
            taxamount = parseFloat(subtotal) * (15 / 100);
            Total = parseFloat(subtotal) + parseFloat(taxamount);
           
        }
         setearvalor("DiscountAmount", DiscountAmount);
            setearvalor("AmountLine", amount);
             setearvalor("TaxAmount", taxamount);
            setearvalor("SubTotalLine", subtotal);
        setearvalor("TotalLine", Total);
    

    }

    function CalcularTotal() {
        //debugger;
        var quantity = $("#Quantity").val();
        var price = $("#Price").val();
         var Monto = quantity * price;
        setearvalor("Monto", Monto);
    }

    function cargarloader() {
       $("#btnActualizarCotizacionLinea").prop("disabled", true);
    }

    function agregarcondicionpopup() {
        var dataObject = { 'ConditionId': 0 };

           $.ajax({
            url: '@Url.Action("pvwConditions","Conditions")',
            method: 'GET',
            datatype: "json",
            contentType: 'application/json',
            async: false,
            data: dataObject,
               success: function (result) {
                   //console.log(result);
                   //debugger;
                   $("#ConditionView").html('');
                   $("#ConditionView").html(result);

            },
             error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert(textStatus + ": " + XMLHttpRequest.responseText);
              }
         });

        $('#myModalConditions').modal('show');

    }

    function AgregarCustomerCondition() {
        var notification = $("#notification").data("kendoNotification");


        if ($("#SalesOrderId").val() > 0) {
            $('#myModalCustomerConditions').modal('show');
        }
        else {
            notification.show({
                title: "Validación",
                message: "Para agregar una condición debe generar el documento!"
            }, "info");
        }
    }

</script>






<script>


    function GetSalesOrderId() {
        var ProductName = '', unidaddemedida = '';
        if ($("#UnitOfMeasureId") != null) {
            if ($("#UnitOfMeasureId").data("kendoDropDownList") != null) {
                unidaddemedida = $("#UnitOfMeasureId").data("kendoDropDownList").text();
            }
        }

        if ($("#ProductId") != null) {
            if ($("#ProductId").data("kendoDropDownList") != null) {
                ProductName = $("#ProductId").data("kendoDropDownList").text();
            }
        }

        var displayedData = $("#gridProformaInvoiceDetail").data().kendoGrid.dataSource.data();
        var id = -999999;
        var numerosp = $("#ProductId").val();
        if (numerosp == null) {
            numerosp = 0;
        }
        debugger;
        if (Number($("#ProformaLineId").val()) === 0) {
            if (displayedData.length > 0) {
                for (var i = 0; i < displayedData.length; i++) {
                    if (displayedData[i].ProductId == $("#ProductId").val()) {
                        swal("Este producto ya está en el detalle.");
                        return;
                    }
                    if (displayedData[i].ProformaLineId > id)
                        id = displayedData[i].ProformaLineId;  
                }
                id = id + 1;
            }
            else if ($("#ProductId").val() > 0) {
                
                id = 1;
            }
        }
        else {
            id = $("#ProformaLineId").val(0);
        }


        return {
                ProformaLineId : id,
                ProformaInvoiceId: @Model.ProformaInvoiceId,
                ProductId: $("#ProductId").val(),
                SubProductId: $("#SubProductId").val(),
                ProductName: ProductName,
                UnitOfMeasureId: $("#UnitOfMeasureId").val(),
                UnitOfMeasureName: unidaddemedida,
                Description: $("#DescriptionDetail").val(),
                Quantity: $("#Quantity").val(),
                Price: $("#Price").val(),
                Amount: $("#AmountLine").val(),
                DiscountPercentage: $("#DiscountPercentage").val(),
                DiscountAmount: $("#DiscountAmount").val(),
                SubTotal: $("#SubTotalLine").val(),
                TaxPercentage: $("#TaxPercentage").val(),
                TaxCode: $("#TaxCode").val(),
                TaxId: $("#TaxId").val(),
                TaxAmount: $("#TaxAmount").val(),
                Total: $("#TotalLine").val(),
            }
        }

    function RefreshCotizacionesDetail() {
        debugger;
        var grid = $("#gridProformaInvoiceDetail").getKendoGrid();
        grid.dataSource.read();
        grid.refresh();

        $("#ProformaLineId").val(0);
         $("#ProformaInVoiceId").val('');
        $("#ProductId").data("kendoDropDownList").value(0);
        $("#DescriptionDetail").val('');
        $("#UnitOfMeasureId").val();
        $("#Quantity").data("kendoNumericTextBox").value('0');
        $("#Price").val(0);
        $("#AmountLine").data("kendoNumericTextBox").value('0');
        $("#DiscountPercentage").data("kendoNumericTextBox").value(0);
        $("#DiscountAmount").data("kendoNumericTextBox").value('0');
        $("#SubTotalLine").data("kendoNumericTextBox").value('0');
        $("#TaxCode").data("kendoDropDownList").value(0);
        $("#TaxPercentage").data("kendoNumericTextBox").value('0');
        $("#TaxAmount").data("kendoNumericTextBox").value('0');
        $("#TotalLine").data("kendoNumericTextBox").value(0);
        $("#DescriptionDetail").val('');
        $("#TaxCode").val(0);
        $("#Existencia").val(0);
    }


    function AddCotizacionDetalle() {
        $("#frmSalesOrderLine :input").not('#SalesOrderId').prop("disabled", false);
        $('#TaxCode').val(0);
        $('#myModalSalesOrderLine').modal('show');


    }



    var hcustom = 0;
    function EditCotizacionDetalle(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //  debugger;
        if (dataItem.ProformaInvoiceId > 0) {
             $("#btnActualizarCotizacionLinea").prop("disabled", true);
            var subproducto = 0;
            var dataObject = { 'Id': dataItem.ProformaLineId };
            $.ajax({
                url: '@Url.Action("pvwProformaInvoiceLine", "ProformaInvoiceLine")',
                method: 'POST',
                datatype: "json",
                contentType: 'application/json',
                async: false,
                data: JSON.stringify(dataObject),
                success: function (data) {
                    $("#SalesOrderLineMant").html('');
                    $("#SalesOrderLineMant").html(data);
                    var txt = $(data);

                    var combobox = $('#ProductId').getKendoDropDownList();
                    if (combobox != null) {
                        var found = $("#ProductId", txt);
                        subproducto = $(found).val();
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {

                    swal("Validacion", textStatus + ": " + XMLHttpRequest.responseText, "error");

                }
            });

            $("#frmSalesOrderLine :input").prop("disabled", true);
            //llenarsubproduct();
            var combobox = $('#ProductId').getKendoDropDownList();
            if (combobox != null) {
                combobox.value(subproducto);
                combobox.trigger('change');
            }
        }
        else {

            var dataObject = { 'ProformaInvoiceId': 0, 'IdCD': ($("#cbxBuscarCertificadosDeposito").val() == '' ? 0 : $("#cbxBuscarCertificadosDeposito").val()) };
            @*console.log(dataObject);
           $.ajax({
                url: '@Url.Action("pvwProformaInvoiceLine", "ProformaInvoiceLine")',
                method: 'POST',
                datatype: "json",
                contentType: 'application/json',
                async: false,
                data: JSON.stringify(dataObject),
                success: function (data) {
                    $("#SalesOrderLineMant").html('');
                    $("#SalesOrderLineMant").html(data);
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {

                    //  $("#btngenerarfactura").show();
                    swal("Validacion", textStatus + ": " + XMLHttpRequest.responseText, "error");

                }
            });*@


            $("#btnActualizarCotizacionLinea").prop("disabled", false);
            $("#ProformaLineId").val(dataItem.ProformaLineId);
            $("#IdCD").val(0);
            hcustom = $("#CustomerId").val();
            //console.log(hcustom);

            $("#ProductId").data("kendoDropDownList").dataSource.read();
            $("#ProductId").data("kendoDropDownList").value(dataItem.ProductId);
            $("#UnitOfMeasureId").data("kendoDropDownList").value(dataItem.UnitOfMeasureId);
            $("#UnitOfMeasureId").data("kendoDropDownList").value(dataItem.UnitOfMeasureId);
            $("#TaxCode").data("kendoDropDownList").value(dataItem.TaxCode);
            $("#TaxAmount").data("kendoNumericTextBox").value(dataItem.TaxAmount);
            $("#DescriptionDetail").val(dataItem.Description);

            $("#Quantity").data("kendoNumericTextBox").value(dataItem.Quantity);
            $("#Price").data("kendoNumericTextBox").value(dataItem.Price);
            $("#Amount").data("kendoNumericTextBox").value(dataItem.Amount);
            $("#SubTotalLine").data("kendoNumericTextBox").value(dataItem.SubTotal);
            $("#TotalLine").data("kendoNumericTextBox").value(dataItem.Total);
        }
        $('#myModalSalesOrderLine').modal('show');

    }


        function Delete(e) {

        e.preventDefault();
        if (confirm('Esta seguro que desea eliminar la fila?')) {
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            $.ajax({
                url: '@Url.Action("Delete", "ProformaInvoiceLine")',
                method: 'POST',
                datatype: "json",
                contentType: 'application/json',
                async: false,
                data: JSON.stringify(dataItem),
                success: function (data) {
                    //$("#ControlPalletsLineMant").html('');
                    //$("#ControlPalletsLineMant").html(data);
                    //var txt = $(data);
                    //var found = $("#SubProductId", txt);
                    //subproducto = $(found).val();
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    //swal("Validacion", textStatus + ": " + XMLHttpRequest.responseText,"error");
                    //swal("Server Error","Internal Server Error", "error");
                }
            });

            var grid = $("#gridProformaInvoiceDetail").data("kendoGrid");
            grid.dataSource.remove(dataItem);
            //Sync it with the grid
            //grid.dataSource.sync();
        }
    }



</script>

@(Html.Kendo().Grid<ERPMVC.Models.ProformaInvoiceLine>()
                                                                                              .Name("gridProformaInvoiceDetail")
                                                                                              .Columns(columns =>
                                                                                              {
                                                                                                  columns.Command(command =>
                                                                                                  {

                                                                                                      //command.Custom("Editar").Text(" ").IconClass("fa fa-edit").Click("EditCotizacionDetalle");
                                                                                                      if (Model.ProformaInvoiceId == 0)
                                                                                                      {
                                                                                                          command.Custom("Eliminar").Text(" ").IconClass("fa fa-trash").Click("Delete");
                                                                                                      }
                                                                                                  }).Width(80).Title("Acciones");

                                                                                                  columns.Bound(p => p.ProformaLineId).Title("Id Linea").Width(70).Visible(false);
                                                                                                  columns.Bound(p => p.ProformaInvoiceId).Title("Proforma Id").Width(150).Visible(false);
                                                                                                  columns.Bound(p => p.ProductId).Title("IdProducto").Visible(false);
                                                                                                  columns.Bound(p => p.ProductName).Title("Producto").Width(150);
                                                                                                  columns.Bound(p => p.Description).Title("Descripcion").Width(150).Visible(false);
                                                                                                  columns.Bound(p => p.Quantity).Format("{0:n2}").Title("Cantidad").Width(120);
                                                                                                  columns.Bound(p => p.Price).Format("{0:n2}").Title("Precio").Format("{0:n2}").Width(80);
                                                                                                  columns.Bound(p => p.UnitOfMeasureId).Title("Unidad de medida").Visible(false);
                                                                                                  //  columns.Bound(p => p.TaxPercentage).Title("Porcentaje impuestos").Width(150);
                                                                                                  columns.Bound(p => p.DiscountAmount).Format("{0:n2}").Title("Descuentos").Width(120);
                                                                                                  columns.Bound(p => p.SubTotal).Format("{0:n2}").Title("SubTotal").Width(100);
                                                                                                  columns.Bound(p => p.TaxCode).Title("Tipo Impuesto").Width(150).Visible(false);
                                                                                                  // columns.Bound(p => p.tax).Title("Tipo Impuesto").Width(150);
                                                                                                  columns.Bound(p => p.TaxAmount).Format("{0:n2}").Title("Impuestos").Width(120);

                                                                                                  columns.Bound(p => p.Total).Format("{0:n2}").Title("Total").Width(80);

                                                                                              })
                                                                                              .Filterable(f => f.Operators(o => o.ForString(s => s

                                                                                           .Clear()
                                                                                           .Contains("Contiene")
                                                                                           .DoesNotContain("No contiene")
                                                                                           .EndsWith("Termina con")
                                                                                           .IsEqualTo("Es igual a")
                                                                                           .IsNotEqualTo("No es igual a")
                                                                                           .IsNull("Es nulo")
                                                                                           .StartsWith("Inicia con")


                                                                                     )
                                                                                     .ForNumber(n => n
                                                                                       .Clear()
                                                                                       .IsEqualTo("Es igual a")
                                                                                       .IsGreaterThan("Es mayor que")
                                                                                       .IsLessThan("Es menor que")
                                                                                       .IsNull("Es nulo")
                                                                                       .IsLessThanOrEqualTo("Es menor o igual que")
                                                                                       .IsGreaterThanOrEqualTo("Es mayor o igual que")
                                                                                     )
                                                                                     .ForDate(d => d
                                                                                     .Clear()
                                                                                     .IsEqualTo("Es igual que")
                                                                                     .IsGreaterThan("Es mayor que")
                                                                                     .IsLessThan("Es menor que")
                                                                                     .IsLessThanOrEqualTo("Es menor o igual que")
                                                                                     .IsGreaterThanOrEqualTo("Es mayor o igual que")
                                                                                     .IsNotEqualTo("No es igual que")
                                                                                      )
                                                                                   ))
                                                                                              .ToolBar(tools =>
                                                                                              {
                                                                                                  if (Model.ProformaInvoiceId == 1)
                                                                                                  {
                                                                                                      tools.Custom().Text("Agregar").IconClass("k-icon k-i-plus")
                                                                                                      .HtmlAttributes(new { @class = "k-i-plus-sm", onclick = "AddCotizacionDetalle();" });
                                                                                                  }

                                                                                                  //tools.Excel().HtmlAttributes(new { @class = "toolbar-field" });
                                                                                                  //tools.Pdf().HtmlAttributes(new { @class = "toolbar-field" });


                                                                                              })
                                                                                               .Editable(e => e.Mode(GridEditMode.PopUp))
                                                                                                .Sortable()
                                                                                                .AutoBind(true)
                                                                                                .Pageable()
                                                                                                .Events(q =>
                                                                                                {
                                                                                                    q.DataBound("CalcularTotalDocumento");
                                                                                                })
                                                                                                .Filterable()
                                                                                                .Scrollable()
                                                                                                // .ClientDetailTemplateId("template")
                                                                                                .Pdf(pdf => pdf.FileName("CotizacionDetalleReport" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
                                                                                                + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".pdf")
                                                                                                .ProxyURL(Url.Action("Export", "Home")).AllPages())
                                                                                                  .Excel(excel => excel.FileName("CotizacionDetalleReport_" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
                                                                                                + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".xlsx").Filterable(true)
                                                                                                .ProxyURL(Url.Action("Export", "Home")).AllPages(true))
                                                                                                //.Events(e=>e.Save("onsave"))
                                                                                                .DataSource(dataSource =>

                                                                                               dataSource
                                                                                               //.Ajax()
                                                                                               .WebApi()

                                                                                                .ServerOperation(true)
                                                                                                .Model(model =>
                                                                                                {
                                                                                                    model.Id(p => p.ProformaLineId);
                                                                                                    model.Field(p => p.ProformaLineId).Editable(false);
                                                                                                    model.Field(p => p.ProformaLineId).Editable(false);

                                                                                                })
                                                                                         .Events(events =>
                                                                                         {
                                                                                             events.Error("error_handler");

                                                                                         })
                                                                                                                                       .Read(read => read.Action("GetProformaInvoiceLineByProformaInvoiceId", "ProformaInvoiceLine").Data("GetSalesOrderId"))
                                                                                                                                      //.Create(create => create.Action("Insert", "SalesOrderLine"))
                                                                                                                                      //.Update(update => update.Action("Update", "SalesOrderLine", new { SalesOrderLineId = "{0}" }))
                                                                                                                                      //.Destroy(destroy => destroy.Action("Delete", "SalesOrderLine", new { SalesOrderLineId = "{0}" }))
                                                                                                                                      )
)
<script>

                    function setToolbarTooltip(btn_cl, btn_tooltip) {
                        $("#gridProformaInvoiceDetail").kendoTooltip({
                            filter: btn_cl,
                            content: btn_tooltip
                        });
                    }

                    function setRowButtonTooltip(btn_cl, btn_tooltip) {
                        $("#gridProformaInvoiceDetail").kendoTooltip({
                            filter: btn_cl,
                            content: btn_tooltip
                        });
                    }

                    setToolbarTooltip(".k-grid-Agregar", "Agregar nuevo registro");
                    //setRowButtonTooltip(".k-grid-edit", "Tooltip for Edit button");
                    setRowButtonTooltip(".k-grid-GenerarFactura", "Generar una factura fiscal!");
                    setRowButtonTooltip(".k-grid-Imprimir", "Imprimir");
                    setRowButtonTooltip(".k-grid-Editar", "Editar registro");
                    setRowButtonTooltip(".k-grid-Eliminar", "Eliminar registro");
</script>
