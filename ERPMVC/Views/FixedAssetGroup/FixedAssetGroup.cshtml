@using Kendo.Mvc.UI
@{
	ViewData["Title"] = "Grupo Activos Fijos";
}

<script>
	function onsave(e) {
		//   console.log(new Date(e.model.FechaRecepcion).toISOString());
		// e.model.set('FechaRecepcion', new Date(e.model.FechaRecepcion).toISOString());
	}


	function AddFixedAssetGroup() {
		$('#ModalFixedAssetGroup').find(':input').not(':submit').val('');
		$('#ModalFixedAssetGroup').modal('show');
        $('#FixedAssetGroupId').val('0');
        $('#IdEstado').val(0);
	}

	function EditFixedAssetGroup(e) {
		e.preventDefault();
		var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
		var dataObject = {
			FixedAssetGroupId: dataItem.FixedAssetGroupId,
			editar: 0
		};

		$.ajax({
			url: '@Url.Action("pvwAddFixedAssetGroup", "FixedAssetGroup")',
			method: 'POST',
			datatype: "json",
			contentType: 'application/json',
			async: false,
			data: JSON.stringify(dataObject),
			success: function (result) {
				$("#numFixedAssetGroup").html('');
				$("#numFixedAssetGroup").html(result);
				$("#ModalFixedAssetGroup").modal('show');
			},
			error: function (xhr, status, error) {
				var errorMessage = xhr.status + ': ' + xhr.statusText
				alert('Error - ' + errorMessage);
			}
		});
	}

	function RefrescarGrid() {
		var grid = $("#gridFixedAssetGroup").getKendoGrid();
		grid.dataSource.read();
	}

    //funcion para eliminar
    function Delete(e) {
        if (confirm('¿Seguro que quiere eliminar este registro?')) {
            debugger
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            $.ajax({
               url: '@Url.Action("Delete", "FixedAssetGroup")',
                method: 'POST',
                datatype: "json",
                contentType: 'application/json',
                async: false,
                data: JSON.stringify(dataItem),
                //data: { Id: dataItem.UnitOfMeasureId },
                success: function (data) {
                    var grid = $("#gridFixedAssetGroup").data("kendoGrid");
                    grid.dataSource.remove(dataItem);
                    $("#titulo").text("Eliminar Grupo Activos Fijos");
                },
                 error: function (XMLHttpRequest, textStatus, errorThrown) {
                     swal("Error", textStatus, "error");
                  }
            });
        }
    }
</script>


<h3 class="text-themecolor">Grupos de Activos Fijos</h3>

@(Html.Kendo().Grid<ERPMVC.Models.FixedAssetGroup>
        ()
        .Name("gridFixedAssetGroup")

        .Columns(columns =>
        {
            columns.Command(command =>
            {
                command.Custom("Editar").IconClass("fa fa-edit").Text(" ").Click("EditFixedAssetGroup");
                command.Custom("Eliminar").Click("Delete").IconClass("fa fa-trash").Text(" ");
            }).Width(160).Title("Acciones");
            columns.Bound(p => p.FixedAssetGroupId).Width(100).Title("No");
            columns.Bound(p => p.FixedAssetGroupName).Width(150).Title("Grupo");
            columns.Bound(p => p.FixedAssetGroupDescription).Width(150).Title("Descripción");
            columns.Bound(p => p.FixedGroupCode).Width(120).Title("Código de Grupo");
            columns.Bound(p => p.Estado).Width(100).Title("Estado");
        })

        .Filterable
        (f => f.Operators(o => o.ForString(s => s
                                                .Clear()
                                                .Contains("Contiene")
                                                .DoesNotContain("No contiene")
                                                .EndsWith("Termina con")
                                                .IsEqualTo("Es igual a")
                                                .IsNull("Es nulo")
                                                .StartsWith("Inicia con"))
                                                .ForNumber(n => n
                                                .Clear()
                                                .IsEqualTo("Es igual a")
                                                .IsGreaterThan("Es mayor que")
                                                .IsNull("Es nulo")
                                                .IsLessThanOrEqualTo("Es menor o igual que")
                                                .IsGreaterThanOrEqualTo("Es mayor o iguak que"))
                                                .ForDate(d => d
                                                                .Clear()
                                                                .IsEqualTo("Es igual a")
                                                                .IsGreaterThan("Es mayor que")
                                                                .IsLessThan("Es menor que")
                                                                .IsLessThanOrEqualTo("Es menor o igual que")
                                                                .IsGreaterThanOrEqualTo("Es mayor o igual que")
                                                                .IsNotEqualTo("No es igual que") )
                                    )
        )
        .ToolBar(tools =>
        {
            tools.Custom().Text("Agregar").IconClass("k-icon k-i-plus")
            .HtmlAttributes(new { @class = "k-i-plus-sm", onclick = "AddFixedAssetGroup()" });
            tools.Excel().Text("Exportar a excel").HtmlAttributes(new { @class = "toolbar-field" });
            tools.Pdf().Text("Exportar a pdf").HtmlAttributes(new { @class = "toolbar-field" });
        })
        .Editable(e => e.Mode(GridEditMode.PopUp).ConfirmDelete("¿Esta seguro que desea eliminar este registro?"))
        .Sortable()
        .Pageable()
        .Filterable()
        .Scrollable()
        .Pdf(pdf => pdf.FileName("GrupoActivosFijosReporte" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_" +
        DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" +
        DateTime.Now.Second + ".pdf")
        .ProxyURL(Url.Action("Export", "Home")).AllPages())
        .Excel(excel => excel.FileName("GrupoActivosFijosReporte_" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
        + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".xlsx").Filterable(true)
        .ProxyURL(Url.Action("Export", "Home")).AllPages(true))
        .DataSource(ds => ds
            .WebApi()
            .ServerOperation(true)
            .Model(m =>
            {
                m.Id(p => p.FixedAssetGroupId);
                m.Field(p => p.FixedAssetGroupId).Editable(false);
            })
            .Events(e => e.Error("error_handler"))
            .Read(r => r.Action("Get", "FixedAssetGroup"))
            .Create(c => c.Action("Insert", "FixedAssetGroup").Type(HttpVerbs.Post))
            .Update(u => u.Action("Update", "FixedAssetGroup").Type(HttpVerbs.Post))
            .Destroy(destroy => destroy.Action("Delete", "FixedAssetGroup", new { FixedAssetGroupId = "{0}" }).Type(HttpVerbs.Delete))
        )
        .Events(e =>
        { e.Save("onsave");
        })
	)

<script>

    function setToolbarTooltip(btn_cl, btn_tooltip) {
        $("#gridFixedAssetGroup").kendoTooltip({
            filter: btn_cl,
            content: btn_tooltip
        });
    }

    function setRowButtonTooltip(btn_cl, btn_tooltip) {
        $("#gridFixedAssetGroup").kendoTooltip({
            filter: btn_cl,
            content: btn_tooltip
        });
    }


    setToolbarTooltip(".k-grid-Agregar", "Agregar nuevo registro");
    setRowButtonTooltip(".k-grid-Imprimir", "Imprimir");
    setRowButtonTooltip(".k-grid-Editar", "Editar registro");
    setRowButtonTooltip(".k-grid-Eliminar", "Eliminar registro");



</script>
	<div id="numFixedAssetGroup">
		@await Html.PartialAsync("pvwAddFixedAssetGroup", new ERPMVC.DTO.FixedAssetGroupDTO { FixedAssetGroupId = 0 })
	</div>
