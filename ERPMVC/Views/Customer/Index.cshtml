@using Kendo.Mvc.UI

@{
    ViewData["Title"] = "Listado de Clientes";
}
<h3 class="text-themecolor">Clientes</h3>

<script>
 //funcion para eliminar
    function Delete(e) {
        if (confirm('¿Seguro que quiere eliminar este registro?')) {
            debugger
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            $.ajax({
               url: '@Url.Action("Delete", "Customer")',
            method: 'POST',
            datatype: "json",
            contentType: 'application/json',
            async: false,
            data: JSON.stringify(dataItem),
            //data: { Id: dataItem.UnitOfMeasureId },
            success: function (data) {
            var grid = $("#grid").data("kendoGrid");
            grid.dataSource.remove(dataItem);
            $("#titulo").text("Eliminar Cliente");
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
            swal("Error", textStatus, "error");
            }
         });
        }
    }




</script>

@(Html.Kendo().Grid<ERPMVC.Models.Customer>()
                                                                                              .Name("grid")
                                                                                              .Columns(columns =>
                                                                                              {
                                                                                                  columns.Command(command =>
                                                                                                  {
                                                                                                      command.Custom("Editar").Text(" ").IconClass("fa fa-edit").Click("Detalles");
                                                                                                      command.Custom("Eliminar").Click("Delete").IconClass("fa fa-trash").Text(" ");
                                                                                                  }).Width(90).MinResizableWidth(100).Title("Acciones");
                                                                                                  columns.Bound(p => p.Identidad).Title("Identidad").Width(100).Lockable(true);
                                                                                                  columns.Bound(p => p.CustomerName).Title("Nombre Cliente").Width(100).Lockable(true);
                                                                                                  columns.Bound(p => p.CustomerLastName).Title("Apellido Cliente").Width(100).Lockable(true);
                                                                                                  columns.Bound(p => p.Phone).Title("Telefono").Width(100);
                                                                                                  columns.Bound(p => p.FechaCreacion).Format("{0:dd/MM/yyyy}").Width(100).Title("Creado el");

                                                                                              })
                                                                                                  .Filterable(f => f.Operators(o => o.ForString(s => s
                                                                                                                       .Clear()
                                                                                                                       .Contains("Contiene")
                                                                                                                       .DoesNotContain("No contiene")
                                                                                                                       .EndsWith("Termina con")
                                                                                                                       .IsEqualTo("Es igual a")
                                                                                                                       .IsNotEqualTo("No es igual a")
                                                                                                                       .IsNull("Es nulo")
                                                                                                                       .StartsWith("Inicia con")


                                                                                                                 )
                                                                                                                 .ForNumber(n => n
                                                                                                                   .Clear()
                                                                                                                   .IsEqualTo("Es igual a")
                                                                                                                   .IsGreaterThan("Es mayor que")
                                                                                                                   .IsLessThan("Es menor que")
                                                                                                                   .IsNull("Es nulo")
                                                                                                                   .IsLessThanOrEqualTo("Es menor o igual que")
                                                                                                                   .IsGreaterThanOrEqualTo("Es mayor o igual que")
                                                                                                                 )
                                                                                                                 .ForDate(d => d
                                                                                                                 .Clear()
                                                                                                                 .IsEqualTo("Es igual que")
                                                                                                                 .IsGreaterThan("Es mayor que")
                                                                                                                 .IsLessThan("Es menor que")
                                                                                                                 .IsLessThanOrEqualTo("Es menor o igual que")
                                                                                                                 .IsGreaterThanOrEqualTo("Es mayor o igual que")
                                                                                                                 .IsNotEqualTo("No es igual que")
                                                                                                                  )
                                                                                                               ))
                                                                                              .ToolBar(tools =>
                                                                                              {
                                                                                                  tools.Custom().Text("Agregar").IconClass("k-icon k-i-plus").HtmlAttributes(new { @onclick = "Agregar();" });
                                                                                                  tools.Excel().Text("Exportar a excel").HtmlAttributes(new { @class = "toolbar-field" }).Text("Exportar a excel");
                                                                                                  tools.Pdf().Text("Exportar a pdf").HtmlAttributes(new { @class = "toolbar-field" }).Text("Exportar a pdf");

                                                                                              })
                                                                                              .Editable(e => e.Mode(GridEditMode.PopUp).ConfirmDelete("¿Esta seguro que desea eliminar este registro?"))
                                                                                              .Sortable()
                                                                                              .Pageable()
                                                                                              .Filterable()
                                                                                              .Scrollable()
                                                                                              .ColumnMenu()
                                                                                              .Resizable(resize => resize.Columns(true))
                                                                                                .Reorderable(reorder => reorder.Columns(true))
                                                                                              .Pdf(pdf => pdf.FileName("ClienteReport" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
                                                                                               + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".pdf")
                                                                                               .ProxyURL(Url.Action("Export", "Home")).AllPages())
                                                                                                 .Excel(excel => excel.FileName("ClienteReport_" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
                                                                                               + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".xlsx").Filterable(true)
                                                                                               .ProxyURL(Url.Action("Export", "Home")).AllPages(true))
                                                                                              .DataSource(dataSource =>
                                                                                                  dataSource
                                                                                                    .WebApi()
                                                                                                    
                                                                                                    .ServerOperation(true)
                                                                                                    .Model(model =>
                                                                                                    {
                                                                                                        model.Id(p => p.CustomerId);
                                                                                                        model.Field(p => p.CustomerId).Editable(false);
                                                                                                        model.Field(p => p.FechaCreacion).Editable(false);
                                                                                                    })
                                                                                                    .Events(events => events.Error("error_handler"))
                                                                                                    .Read(read => read.Action("Get", "Customer"))
                                                                                                    .Create(create => create.Action("Post", "Customer").Type(HttpVerbs.Post))
                                                                                                    .Update(update => update.Action("Put", "Customer").Type(HttpVerbs.Post))
                                                                                                    .Destroy(destroy => destroy.Action("Delete", "Customer").Type(HttpVerbs.Post))
                                                                                              )
                                                                                                
)

<script>



         //-- Agregar --
        function Agregar() {

         var dataObject = {
             CustomerId: 0
        };

        $.ajax({
            url: '@Url.Action("Details", "Customer")',
            method: 'POST',
            datatype: "json",
            contentType: 'application/json',
            async: false,
            data: JSON.stringify(dataObject),
            success: function (result) {

               // $("#numProduct").html('');
                //$("#numProduct").html(result);
                $("#titulo").text("Nuevo Cliente");
                window.location.href = "@Url.Action("Details", "Customer")";


                //$("#btnCAI").hide();
                $('#ModalProduct').modal('show');
            },
             error: function (XMLHttpRequest, textStatus, errorThrown) {
                 swal("Error", textStatus, "error");
              }
        });


    }
    function Detalles(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = "@Url.Action("Details", "Customer")?CustomerId=" + dataItem.CustomerId;
        }
    //    function OnRequestEnd_TopLinePriceGrid(e) {
    //        console.log(e.type);
    //        if (e.type === "update" || e.type === "create") {
    //            var grid = $('#grid').data('kendoGrid');
    //            grid.dataSource.read();
    //        }
    //}


    //para los tools tips
    function setToolbarTooltip(btn_cl, btn_tooltip) {
        $("#grid").kendoTooltip({
            filter: btn_cl,
            content: btn_tooltip
        });
    }

    function setRowButtonTooltip(btn_cl, btn_tooltip) {
        $("#grid").kendoTooltip({
            filter: btn_cl,
            content: btn_tooltip
        });
    }
    setToolbarTooltip(".k-grid-Agregar", "Agregar nuevo registro");

    //setRowButtonTooltip(".k-grid-edit", "Tooltip for Edit button");
    setRowButtonTooltip(".k-grid-Eliminar", "Eliminar registro");
    setRowButtonTooltip(".k-grid-Imprimir", "Imprimir registro");
    setRowButtonTooltip(".k-grid-ImprimirBoletaDeSalida", "Imprimir Boleta de salida");
    setRowButtonTooltip(".k-grid-Editar", "Editar registro");
</script>





