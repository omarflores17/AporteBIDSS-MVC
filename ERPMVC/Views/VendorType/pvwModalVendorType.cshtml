@model ERPMVC.Models.VendorType

@{Layout = null;
    var messages = new Dictionary<string, string>() { 
                                        {"required","Valor requerido" }
                                    };
 
}

<div id="UoModal" class="modal fade" role="dialog" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="titulo">Tipos De Proveedores</h4>
                <button type="button" class="close" onclick="CerrarModal()" aria-hidden="true"><span aria-hidden="true">&times;</span></button>
            </div>

            <form id="frmUnitOfMeasure" kendo-validator="true" kendo-messages="messages" 
                  data-ajax="true"
                  data-ajax-method="post"
                  method="post" class="validation-wizard wizard-circle">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-12">                            
                            <!-- ID -->
                            <div class="row">
                                <div class="col-sm-12 col-md-12" hidden>
                                    <div class="form-group">
                                        <label asp-for="VendorTypeId" class="control-label" style="width:100%">Id</label>
                                        <input asp-for="VendorTypeId" class="form-control disabled" style="min-width: 100% !important;" disabled />
                                        @*<span asp-validation-for="VendorTypeId" class="text-danger"></span>*@
                                    </div>
                                </div>
                            </div>
                            <!-- Descripción -->
                            <div class="row">
                                <div class="col-sm-12 col-md-12">
                                    <div class="form-group">
                                        <label asp-for="VendorTypeName" class="control-label" style="width:100%">Tipo Proveedor</label>
                                        <input type="text" asp-for="VendorTypeName" class="form-control"onkeyup="this.value=Numeros(this.value)" onchange="PrevenirCambios()" maxlength="50" style="min-width: 100% !important;" onkeypress="return soloLetras(event)"required data-required-msg="El Tipo Proveedor es requerido."/>
                                        @*<span asp-validation-for="VendorTypeName" class="text-danger"></span>*@
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-sm-12 col-md-12">
                                    <div class="form-group">
                                        <label asp-for="Description" class="control-label" style="width:100%">Descripción</label>
                                        <input type="text" asp-for="Description" class="form-control"onkeyup="this.value=Numero(this.value)"onchange="PrevenirCambios()" maxlength="150" style="min-width: 100% !important;"onkeypress="return soloLetras(event)" required data-required-msg="La Descripción es requerida." />
                                        @*<span asp-validation-for="Description" class="text-danger"></span>*@
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnGuardar" class="btn btn-success" onclick="GuardarUoM(this);">Guardar</button>
                    <button type="button" class="btn btn-default" onclick="CerrarModal()">Cerrar</button>
                </div>
            </form>
        </div>
    </div>
</div>




<script>
    //verificar si hay cambios realizados
    var changes = false;
    function PrevenirCambios() {
        changes = true;
    }
    function CerrarModal() {
        if (changes) {
            swal({
                title: "Cerrar",
                text: "Los datos que aun no se han guardado del formulario se perderan ¿Desea Continuar? ",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Aceptar",
                cancelButtonText: "Cancelar"
                //closeOnConfirm: false
            }, function () {
                $('#UoModal').modal('hide');
            });
        } else {
            $('#UoModal').modal('hide');
        }
    }
    //SOLO LETRAS
    function soloLetras(e) {
        key = e.keyCode || e.which;
        tecla = String.fromCharCode(key).toLowerCase();
        letras = " áéíóúabcdefghijklmnñopqrstuvwxyz0123456789";
        especiales = "8-37-39-46";

        tecla_especial = false
        for (var i in especiales) {
            if (key == especiales[i]) {
                tecla_especial = true;
                break;
            }
        }

        if (letras.indexOf(tecla) == -1 && !tecla_especial) {
            return false;
        }
    }
    //solo LA PRIMERA letra MAYUSCULA
    function Numeros(string) {
        debugger
        var VendorTypeName = $("#VendorTypeName").val();
        if (VendorTypeName != "") {
            if (VendorTypeName.length <= 1) {
                return VendorTypeName.charAt(0).toUpperCase() + VendorTypeName.slice(1);
            }
        }
        return string;
    }
    function Numero(string) {
        var Description = $("#Description").val();
        if (Description != "") {
            if (Description.length <= 1) {
                return Description.charAt(0).toUpperCase() + Description.slice(1);
            }
        }
        return string;
    }
        //Funcion no aceptar espacios en el textbox
        document.addEventListener("input", function () {
            $("input[type='text']", 'form').each(function () {
                _id = $(this).attr("id");
                _value = document.getElementById(_id).value;
                document.getElementById(_id).value = _value.trimStart();
            });
        })
    

    function RefreshGridUnidades() {
     
        var grid = $("#gridUoM").getKendoGrid();
        grid.dataSource.read();
    }

    function GuardarUoM(e) {
        //$("#btnGuardar").hide();
        //$("#btnGuardar").prop("disabled", true);

        var dataObject = {
            //'VendorTypeId': $("#VendorTypeId").val(),
            'VendorTypeId': $("#VendorTypeId").val() === "" ? "0" : $("#VendorTypeId").val(),
            'VendorTypeName': $("#VendorTypeName").val(),
            'Description': $("#Description").val(),        
            
            //'UsuarioCreacion': $("#UsuarioCreacion").val(),
            //'UsuarioModificacion': "",
            //'FechaCreacion': $("#FechaCreacion").val(),
            //'FechaModificacion': "",

        };
        var validator = $("#frmUnitOfMeasure").data("kendoValidator");

            if (validator.validate()) {
                $.ajax({
                    url: '@Url.Action("SaveVendorType", "VendorType")',
                    method: 'POST',
                    datatype: "json",
                    contentType: 'application/json',
                    async: false,
                    data: JSON.stringify(dataObject),
                    success: function (data) {
                        $("#VendorTypeId").val(data.VendorTypeId);                       
                        swal("Tipo de Proveedor","Datos guardados","success");                       
                        $('#UoModal').modal('hide');
                        RefreshGridUnidades();
                        window.addEventListener("keyup", function (event) {
                            var codigo = event.keyCode || event.which;
                            if (codigo == 13) {
                                //Cierras tu ventana
                            }
                        }, false);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        $("#btnGuardar").show();
                        $("#btnGuardar").prop("disabled", false);
                        swal(textStatus + ": " + XMLHttpRequest.responseText + textStatus);
                    }
                });

            }
            else {
                $("#btnGuardar").show();
                $("#btnGuardar").prop("disabled", false);

            }
    }
</script>