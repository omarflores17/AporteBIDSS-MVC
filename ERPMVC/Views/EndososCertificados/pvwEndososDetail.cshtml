@model ERPMVC.DTO.EndososDTO



<script>


    function GetEndososCertificadosId() {
        var subproductname = '', unidaddemedida = '', WareHouseId='';
        if ($("#SubProductId") != null) {
            if ($("#SubProductId").data("kendoDropDownList") != null) {
                subproductname = $("#SubProductId").data("kendoDropDownList").text();
            }
        }

        if ($("#UnitOfMeasureId") != null) {
            if ($("#UnitOfMeasureId").data("kendoDropDownList") != null) {
                unidaddemedida = $("#UnitOfMeasureId").data("kendoDropDownList").text();
            }
        }

        if ($("#WareHouseId") != null) {
            if ($("#WareHouseId").data("kendoDropDownList") != null) {
                WareHouseId = $("#WareHouseId").data("kendoDropDownList").text();
            }
        }

        return {
            'EndososCertificadosLineId': $("#EndososCertificadosLineId").val(),
            'EndososCertificadosId':@Model.EndososCertificadosId,
            'UnitOfMeasureId': $("#UnitOfMeasureId").val(),
            'UnitOfMeasureName': unidaddemedida,
            //'ProductId': $("#ProductId").val(),
            //'ProductName': $("#ProductName").val(),
            'SubProductId': $("#SubProductId").val(),
            'SubProductName': subproductname,
            'Price': $("#Price").val(),
            'ValorEndoso': $("#ValorEndoso").val()

        }
    }

    function RefreshEndososDetail() {
      //  console.log('Refresca Entrada de mercaderias');
        var grid = $("#gridEndososDetail").getKendoGrid();
        grid.dataSource.read();
    }


    function AddEndososDetalle() {
        var notification = $("#notification").data("kendoNotification");
      //  console.log($("#ProductId").val());
        if ($("#ProductId").val() !== '' && $("#ProductId").val() !== '0'
            && $("#CustomerId").val() !== '0' && $("#CustomerId").val() !== ''  ) {

           // llenarsubproduct();
            $("#frmEndososCertificadosLine :input").not('#EndososCertificadosLineId').prop("disabled", false);
            //$("#frmEndososCertificadosLine :input").val('');
            $('#myModalEndososCertificadosLine').modal('show');
        } else {
            var notification = $("#notification").data("kendoNotification");
            notification.show({
                title: "Validacion",
                message: "Debe seleccionar un producto y un cliente!"
            }, "error");

        }

    }


    function EditEndososDetalle(e) {

        e.preventDefault();
        var notification = $("#notification").data("kendoNotification");
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        if (dataItem.EndososCertificadosLineId > 0) {
            var subproducto = 0;
            var dataObject = { 'EndososCertificadosLineId': dataItem.EndososCertificadosLineId };
            $.ajax({
                url: '@Url.Action("pvwEndososDetailMant", "EndososCertificadosLine")',
                method: 'POST',
                datatype: "json",
                contentType: 'application/json',
                async: false,
                data: JSON.stringify(dataObject),
                success: function (data) {
                    $("#EndososLineMant").html('');
                    $("#EndososLineMant").html(data);

                    var txt = $(data);
                    var found = $("#SubProductId", txt);
                    subproducto = $(found).val();

                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {

                    //  $("#btngenerarfactura").show();
                    notification.show({
                        title: "Validacion",
                        message: textStatus + ": " + XMLHttpRequest.responseText
                    }, "error");

                }
            });

            hcustom = $("#CustomerId").val();
            $("#frmEndososCertificadosLine :input").prop("disabled", true);
            //llenarsubproduct();
        //    $("#SubProductId").data("kendoDropDownList").dataSource.read();
            var combobox = $('#SubProductId').getKendoDropDownList();
            combobox.value(subproducto);
            combobox.trigger('change');
        }
        else {
            $("#EndososCertificadosLineId").val(dataItem.EndososCertificadosLineId);
            $("#EndososCertificadosId").val(dataItem.EndososCertificadosId);

           // $("#UnitOfMeasureName").val(dataItem.UnitOfMeasureName);
            $("#UnitOfMeasureId").data("kendoDropDownList").value(dataItem.UnitOfMeasureId);
            $("#SubProductId").data("kendoDropDownList").dataSource.read();
            $("#SubProductId").data("kendoDropDownList").value(dataItem.SubProductId);
            //$("#SubProductName").val(dataItem.SubProductName);

            var ValorEndoso = $("#ValorEndoso").data("kendoNumericTextBox");
            ValorEndoso.value(dataItem.ValorEndoso);
            ValorEndoso.trigger('change');

            var Price = $("#Price").data("kendoNumericTextBox");
            Price.value(dataItem.Price);
            Price.trigger('change');

            //var Total = $("#Total").data("kendoNumericTextBox");
            //Total.value(dataItem.Total);
            //Total.trigger('change');

            //var quantitysacos= $("#QuantitySacos").data("kendoNumericTextBox");
            //if (quantitysacos !== null && dataItem.QuantitySacos != null)
            //    quantitysacos.value(dataItem.QuantitySacos);
            //    quantitysacos.trigger('change');

            //var total = $("#Total").data("kendoNumericTextBox");
            //if (total !== null)
            //    total.value(dataItem.TotalSacos);
            //      total.trigger('change');

          //  $("#WareHouseId").data("kendoDropDownList").value(dataItem.WareHouseId);
          //  data.WarehouseId
            //var ControlPalletsId = $("#ControlPalletsId").data("kendoNumericTextBox");
            //ControlPalletsId.value(dataItem.ControlPalletsId);
            //ControlPalletsId.trigger('change');
        }




        $('#myModalEndososCertificadosLine').modal('show');

    }

    function Delete(e) {

        e.preventDefault();
        if (confirm('Esta seguro que desea eliminar la fila?')) {
            var notification = $("#notification").data("kendoNotification");
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

            $.ajax({
                url: '@Url.Action("Delete", "EndososCertificadosLine")',
                method: 'POST',
                datatype: "json",
                contentType: 'application/json',
                async: false,
                data: JSON.stringify(dataItem),
                success: function (data) {
                    //$("#EndososLineMant").html('');
                    //$("#EndososLineMant").html(data);
                    //var txt = $(data);
                    //var found = $("#SubProductId", txt);
                    //subproducto = $(found).val();
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {

                    //  $("#btngenerarfactura").show();
                    notification.show({
                        title: "Validacion",
                        message: textStatus + ": " + XMLHttpRequest.responseText
                    }, "error");

                }
            });

            var grid = $("#gridEndososDetail").data("kendoGrid");
            grid.dataSource.remove(dataItem);
            //Sync it with the grid
            //grid.dataSource.sync();
        }
    }
</script>



<div class="box">
    <div class="box-body">

        @(Html.Kendo().Grid<ERPMVC.Models.Product>()
                                                  .Name("gridEndososDetail")
                                                  .Columns(columns =>
                                                  {
                                                      columns.Command(command =>
                                                      {
                                                          if (Model.editar == 1)
                                                          {
                                                              command.Custom("Eliminar").Text(" ").IconClass("fa fa-trash-alt").Click("Delete");
                                                          }
                                                          command.Custom("Editar").Text(" ").IconClass("fa fa-edit").Click("EditEndososDetalle");
                                                  // command.Custom("Imprimir").Click("ImprimirCotizacion");
                                                  //  command.Edit(); command.Destroy();
                                              }).Width(100);

                                                      columns.Bound(p => p.ProductCode).Title("Código").Width(120);
                                                      columns.Bound(p => p.Description).Title("Descripción").Width(150);
                                                      columns.Bound(p => p.UnitOfMeasure).Title("Cant. Disp.").Width(150);
                                                      columns.Bound(p => p.UnitOfMeasure).Title("Cant. Sal.").Width(150);
                                                      columns.Bound(p => p.UnitOfMeasureId).Title("Cant. Apro.").Width(0);
                                                      columns.Bound(p => p.DefaultBuyingPrice).Title("Costo").Width(0);
                                                      columns.Bound(p => p.DefaultSellingPrice).Title("Precio").Width(100);
                                                      columns.Bound(p => p.UnitOfMeasure).Title("Observaciones").Width(150);

                                                  })
                                                      .Filterable(f => f.Operators(o => o.ForString(s => s
                                               .Clear()
                                               .Contains("Contiene")
                                                       .DoesNotContain("No contiene")
                                                       .EndsWith("Termina con")
                                                       .IsEqualTo("Es igual a")
                                                       .IsNotEqualTo("No es igual a")
                                                       .IsNull("Es nulo")
                                                       .StartsWith("Inicia con")


                                                 )
                                                 .ForNumber(n => n
                                                   .Clear()
                                                   .IsEqualTo("Es igual a")
                                                   .IsGreaterThan("Es mayor que")
                                                   .IsLessThan("Es menor que")
                                                   .IsNull("Es nulo")
                                                   .IsLessThanOrEqualTo("Es menor o igual que")
                                                   .IsGreaterThanOrEqualTo("Es mayor o igual que")
                                                 )
                                                 .ForDate(d => d
                                                 .Clear()
                                                 .IsEqualTo("Es igual que")
                                                 .IsGreaterThan("Es mayor que")
                                                 .IsLessThan("Es menor que")
                                                 .IsLessThanOrEqualTo("Es menor o igual que")
                                                 .IsGreaterThanOrEqualTo("Es mayor o igual que")
                                                 .IsNotEqualTo("No es igual que")
                                                  )
                                               ))
                                                  .ToolBar(tools =>
                                                  {
                                                      if (Model.editar == 1)
                                                      {
                                                          tools.Custom().Text("Agregar").IconClass("k-icon k-i-plus")
                                                                         .HtmlAttributes(new { @class = "k-i-plus-sm", onclick = "BusquedaProduct();" });
                                                      }

                                              // tools.Excel().HtmlAttributes(new { @class = "toolbar-field" });
                                              //tools.Pdf().HtmlAttributes(new { @class = "toolbar-field" });


                                          })
                                                   .Editable(e => e.Mode(GridEditMode.PopUp))
                                                    .Sortable()
                                                    .AutoBind(true)
                                                    .Pageable()
                                                    .Filterable()
                                                    .Scrollable()
                                                    // .ClientDetailTemplateId("template")
                                                    .Pdf(pdf => pdf.FileName("EndososDetalleReport" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
                                                    + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".pdf")
                                                    .ProxyURL(Url.Action("Export", "Home")).AllPages())
                                                      .Excel(excel => excel.FileName("EndososDetalleReport_" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
                                                    + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".xlsx").Filterable(true)
                                                    .ProxyURL(Url.Action("Export", "Home")).AllPages(true))
                                                    //.Events(e=>e.Save("onsave"))
                                                    .DataSource(dataSource =>

                                                   dataSource
                                                   //.Ajax()
                                                   .WebApi()

                                                    .ServerOperation(true)
                                                    .Model(model =>
                                                    {
                                                        model.Id(p => p.ProductId);
                                                //model.Field(p => p.EndososCertificadosLineId).Editable(false);
                                                model.Field(p => p.ProductId).Editable(false);
                                                //  model.Field(p => p.ControlPalletsId).Editable(true);

                                            })
                                                    .Events(events =>
                                                    {
                                                        events.Error("error_handler");
                                                //events.upda("EditHandler");

                                            })
                                                    .Read(read => read.Action("GetEndososCertificadosLineByEndososCertificadosId", "EndososCertificadosLine").Data("GetEndososCertificadosId"))
                                                    //.Create(create => create.Action("Insert", "SalesOrderLine"))
                                                    //.Update(update => update.Action("Update", "SalesOrderLine", new { SalesOrderLineId = "{0}" }))
                                                    .Destroy(destroy => destroy.Action("Delete", "EndososCertificadosLine").Type(HttpVerbs.Post))
                                              )
        )

    </div>
</div>


<div id="goodsReceived">
    @await Html.PartialAsync("pvwModalProduct", new ERPMVC.Models.Product())
</div>
<script>
    function BusquedaProduct() {
         var dataObject = {
             EndososCertificadosId: 0,
            editar : 1
        };

        $.ajax({
            url: '@Url.Action("pvwModalProducto", "EndososCertificados")',
            method: 'POST',
            datatype: "json",
            contentType: 'application/json',
            async: false,
            data: JSON.stringify(dataObject),
            success: function (modal) {
                //$("#goodsReceived").html('');
                //$("#goodsReceived").html(result);
                @*window.location.href = "@Url.Action("pvwModalProducto", "GoodsReceived")";*@
                //RefreshCotizacionesDetail();
                 //$("#btnSaveCotizacion").show();
                $('#ModalProduct').modal('show');
            },
             error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert(textStatus + ": " + XMLHttpRequest.responseText);
              }
        });


    }
</script>