@using Kendo.Mvc.UI

@{
    ViewData["Title"] = "Listado de Proveedores";
}


<script>
 //funcion para eliminar
    function Delete(e) {
        debugger;
          if (confirm('¿Seguro que quiere eliminar este registro?')) {
            
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            $.ajax({
               url: '@Url.Action("Delete", "Vendor")',
                method: 'POST',
                datatype: "json",
                contentType: 'application/json',
                async: false,
                data: JSON.stringify(dataItem),
                //data: { VendorId: dataItem.VendorId },
                success: function (data) {
                    var grid = $("#gridNumeracionVendor").data("kendoGrid");
                    grid.dataSource.remove(dataItem);
                    $("#titulo").text("Eliminar Proveedor");
                },
                     error: function (XMLHttpRequest, textStatus, errorThrown) {
                         swal(textStatus + ": " + XMLHttpRequest.responseText + textStatus);

                     }
            });
          }
      }


         //-- Agregar --
        function Agregar() {

         var dataObject = {
            VendorId: 0
        };

        $.ajax({
            url: '@Url.Action("Details", "Vendor")',
            method: 'POST',
            datatype: "json",
            contentType: 'application/json',
            async: false,
            data: JSON.stringify(dataObject),
            success: function (result) {

                $("#titulo").text("Nuevo Proveedor");
                window.location.href = "@Url.Action("Details", "Vendor")";


                $('#ModalVendor').modal('show');
            },
             error: function (XMLHttpRequest, textStatus, errorThrown) {
                 swal("Error", textStatus, "error");
              }
        });


    }
    function Detalles(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = "@Url.Action("Details", "Vendor")?VendorId=" + dataItem.VendorId;
        }

</script>

<h3 class="text-themecolor">Proveedores</h3>
@(Html.Kendo().Grid<ERPMVC.Models.Vendor>
                        ()
                        .Name("gridNumeracionVendor")
                        .Columns(columns =>
                        {
                            columns.Command(command =>
                            {

                                command.Custom("Editar").Text(" ").IconClass("fa fa-edit").Click("Detalles");
                                command.Custom("Eliminar").Click("Delete").IconClass("fa fa-trash").Text(" ");
                            }).Width(150).Title("Acciones");

                            columns.Bound(p => p.VendorId).Title("Código").Width(150);
                            columns.Bound(p => p.RTN).Title("RTN/Identidad").Width(200);
                            columns.Bound(p => p.VendorName).Title("Nombre").Width(250);
                            columns.Bound(p => p.Phone).Title("Teléfono").Width(150);
                            columns.Bound(p => p.Estado).Title("Estado").Width(250);
                        })
                        .Filterable(f => f.Operators(o => o.ForString(s => s
                        .Clear()
                        .Contains("Contiene")
                        .DoesNotContain("No contiene")
                        .EndsWith("Termina con")
                        .IsEqualTo("Es igual a")
                        .IsNotEqualTo("No es igual a")
                        .IsNull("Es nulo")
                        .StartsWith("Inicia con")


                        )
                        .ForNumber(n => n
                        .Clear()
                        .IsEqualTo("Es igual a")
                        .IsGreaterThan("Es mayor que")
                        .IsLessThan("Es menor que")
                        .IsNull("Es nulo")
                        .IsLessThanOrEqualTo("Es menor o igual que")
                        .IsGreaterThanOrEqualTo("Es mayor o igual que")
                        )
                        .ForDate(d => d
                        .Clear()
                        .IsEqualTo("Es igual que")
                        .IsGreaterThan("Es mayor que")
                        .IsLessThan("Es menor que")
                        .IsLessThanOrEqualTo("Es menor o igual que")
                        .IsGreaterThanOrEqualTo("Es mayor o igual que")
                        .IsNotEqualTo("No es igual que")
                        )
                        ))
                        .ToolBar(tools =>
                        {
                // tools.Create();
                tools.Custom().Text("Agregar").IconClass("k-icon k-i-plus").HtmlAttributes(new { @onclick = "Agregar();" });
                            tools.Excel().Text("Exportar a excel").HtmlAttributes(new { @class = "toolbar-field" });
                            tools.Pdf().Text("Exportar a pdf").HtmlAttributes(new { @class = "toolbar-field" });



                        })
                        .Editable(e => e.Mode(GridEditMode.PopUp))
                        .Sortable()
                        .Pageable()
                        .Filterable()
                        .Scrollable()
                        .Pdf(pdf => pdf.FileName("ProveedorReporte" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
                        + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".pdf")
                        .ProxyURL(Url.Action("Export", "Home")).AllPages())
                        .Excel(excel => excel.FileName("ProveedorReporte_" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
                        + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".xlsx").Filterable(true)
                        .ProxyURL(Url.Action("Export", "Home")).AllPages(true))
                        .DataSource(dataSource =>
                        dataSource
                        .WebApi()

                        .ServerOperation(true)
                        .Model(model =>
                        {
                            model.Id(p => p.VendorId);
                            model.Field(p => p.VendorName).Editable(true);

                        })
                        .Events(events => events.Error("error_handler"))
                        .Read(read => read.Action("GetVendor", "Vendor"))
                        .Create(create => create.Action("Insert", "Vendor"))
                        .Update(update => update.Action("Update", "Vendor", new { TypeAccountId = "{0}" }).Type(HttpVerbs.Put))
                        .Destroy(destroy => destroy.Action("Delete", "Vendor", new { VendorId = "{0}" }).Type(HttpVerbs.Delete))

                        )
                        .Events(e =>
                        {


                        })
)

<script>
 
        function OnRequestEnd_TopLinePriceGrid(e) {
            console.log(e.type);
            if (e.type === "update" || e.type === "create") {
                var grid = $('#gridNumeracionVendor').data('kendoGrid');
                var grida = $('#gridNumeracionProduct').data('kendoGrid');
                grid.dataSource.read();
                grida.dataSource.read();
            }
        }

                //para los tools tips
                function setToolbarTooltip(btn_cl, btn_tooltip) {
                    $("#gridNumeracionVendor").kendoTooltip({
                        filter: btn_cl,
                        content: btn_tooltip
                    });
                }

                function setRowButtonTooltip(btn_cl, btn_tooltip) {
                    $("#gridNumeracionVendor").kendoTooltip({
                        filter: btn_cl,
                        content: btn_tooltip
                    });
                }

                setToolbarTooltip(".k-grid-Agregar", "Agregar nuevo registro");
                //setRowButtonTooltip(".k-grid-edit", "Tooltip for Edit button");

                setRowButtonTooltip(".k-grid-Eliminar", "Eliminar registro");
                setRowButtonTooltip(".k-grid-Imprimir", "Imprimir");
                setRowButtonTooltip(".k-grid-ImprimirBoletaDeSalida", "Imprimir Boleta de salida");
                setRowButtonTooltip(".k-grid-Editar", "Editar registro");
</script>


